// <auto-generated />
using System;

using Covauto.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Covauto.Infrastructure.Migrations
{
    [DbContext(typeof(AutosContext))]
    [Migration("20250604074713_CreateRittenTable")]
    partial class CreateRittenTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("Covauto.Domain.Entities.Auto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GebruikerId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("beschikbaarheid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("eindAdres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("kilometerstand")
                        .HasColumnType("INTEGER");

                    b.Property<string>("naamAuto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("publicatieJaar")
                        .HasColumnType("INTEGER");

                    b.Property<string>("startAdres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GebruikerId");

                    b.ToTable("Autos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GebruikerId = 1,
                            beschikbaarheid = true,
                            eindAdres = "alweer koeweide",
                            kilometerstand = 2023,
                            naamAuto = "BMW",
                            publicatieJaar = 0,
                            startAdres = "Koeweide"
                        },
                        new
                        {
                            Id = 2,
                            GebruikerId = 2,
                            beschikbaarheid = true,
                            eindAdres = "alweer Schaapweide",
                            kilometerstand = 2022223,
                            naamAuto = "BMW2",
                            publicatieJaar = 0,
                            startAdres = "Schaapweide"
                        });
                });

            modelBuilder.Entity("Covauto.Domain.Entities.Gebruiker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Gebruikers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Naam = "Mark J. Prijs"
                        },
                        new
                        {
                            Id = 2,
                            Naam = "Joseph Albahari"
                        });
                });

            modelBuilder.Entity("Covauto.Domain.Entities.Rit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AutoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BeginAdres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("BeginKmStand")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<string>("EindAdres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EindKmStand")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GebruikerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Ritten");
                });

            modelBuilder.Entity("Covauto.Domain.Entities.Auto", b =>
                {
                    b.HasOne("Covauto.Domain.Entities.Gebruiker", "Gebruiker")
                        .WithMany("Autos")
                        .HasForeignKey("GebruikerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gebruiker");
                });

            modelBuilder.Entity("Covauto.Domain.Entities.Gebruiker", b =>
                {
                    b.Navigation("Autos");
                });
#pragma warning restore 612, 618
        }
    }
}
